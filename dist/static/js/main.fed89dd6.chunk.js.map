{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","state","auth","firebase","profile","dispatch","signOut","getState","getFirebase","then","type","catch","err","props","className","to","onClick","initial","SignedOutLinks","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Notification","Component","compose","firestoreConnect","collection","limit","orderBy","console","log","firestore","ordered","ownProps","match","params","data","SignIn","email","password","handleChange","e","preventDefault","setState","target","value","handleSubmit","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","SignUp","firstname","lastname","signUp","newuser","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","CreateProject","createProject","history","push","add","authorId","Date","App","path","component","exact","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","ReactDOM","render","children","useSelector","isLoaded","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.fed89dd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks  = (props) => {\r\n    const {auth} = props\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n    <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{auth.initial}</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth : state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignedInLinks);","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState) => {\r\n        //const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type:'SIGNOUT_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type: 'SIGNOUT_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore =  getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstname,\r\n                lastName: newUser.lastname,\r\n                initial: newUser.firstname[0] + newUser.lastname[0]\r\n            }).then(() => {\r\n                dispatch({type: 'SIGNUP_SUCCESS'})\r\n            }).catch(err => {\r\n                dispatch({type: 'SIGNUP_ERROR', err})\r\n            })\r\n        })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks  = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Sign Up</NavLink></li>\r\n            <li><NavLink to='/signin'>Log In</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst Navbar = (props) => {\r\n    const { auth } = props;\r\n    const links = auth.uid? <SignedInLinks/>:<SignedOutLinks/>;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Project Plan</Link>\r\n                {links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = ({notifications}) => {\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(notification => {\r\n                            return (<li key={notification.id}>\r\n                                <span className=\"pink-text\">{notification.user}</span>\r\n                                <span>{notification.content}</span>\r\n                            <div className=\"grey-text note-date\">{moment(notification.time.toDate()).fromNow()}</div>\r\n                            </li>)\r\n                        })}                   \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content gray-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>Posted by the {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()} </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProjectSummary from './ProjectSummary';\r\n\r\nconst ProjectList = ({projects}) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/'+project.id} key={project.id}>\r\n                        <ProjectSummary project={project}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nimport Notifications from './Notification';\r\nimport ProjectList from '../projects/ProjectList';\r\n\r\nclass Dashboard  extends Component {\r\n    \r\n    render() {\r\n        const { projects, notifications, auth } = this.props\r\n        if(!auth.uid){\r\n            return <Redirect to='/signin'/>\r\n        }\r\n        return (\r\n            <div className=\"dashboaed contaier\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                            <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        notifications: state.firestore.ordered.notifications,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(firestoreConnect([\r\n    {collection: 'projects', limit: 3, orderBy: ['createdAt', 'desc']},\r\n    {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ]),connect(mapStateToProps))(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport moment from 'moment'\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n    const {project, auth} = props\r\n    if(!auth.uid) {\r\n        return <Redirect to='/signin'/>\r\n    }\r\n    if(project) {\r\n        return(\r\n        <div className=\"container project-details \">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"content\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>{project.content}</p>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n            </div>\r\n        </div>\r\n    </div>)\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading...</p>\r\n            </div>\r\n         )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state)\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project =  projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(firestoreConnect(['projects']),connect(mapStateToProps))(ProjectDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signIn } from '../../store/actions/authActions';\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //console.log(this.state)\r\n        this.props.signIn(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n        if(auth.uid) {\r\n            return <Redirect to='/'/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"email\">Email</label>\r\n                         <input type=\"email\" id=\"email\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"password\">Password</label>\r\n                         <input type=\"password\" id=\"password\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                         <div className=\"red-text center\">\r\n                            {authError ?  <p>{authError}</p>: null}\r\n                         </div>\r\n                     </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        lastname: ''\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {auth,  authError} = this.props;\r\n        if(auth.uid) {\r\n            return <Redirect to='/'/>\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                         <label htmlFor=\"firstname\">Firstname</label>\r\n                         <input type=\"text\" id=\"firstname\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"lastname\">Lastname</label>\r\n                         <input type=\"text\" id=\"lastname\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"email\">Email</label>\r\n                         <input type=\"email\" id=\"email\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"password\">Password</label>\r\n                         <input type=\"password\" id=\"password\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                         <div className=\"red-text center\">\r\n                            {authError? <p>{authError}</p>: null}\r\n                         </div>\r\n                     </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newuser) =>  dispatch(signUp(newuser)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { createProject } from '../../store/actions/projectActions';\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        e.preventDefault()\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid){\r\n            return <Redirect to='/signin'/>\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={(e) => this.handleSubmit(e)} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"title\">Title</label>\r\n                         <input type=\"text\" id=\"title\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <label htmlFor=\"content\">Project Content</label>\r\n                         <textarea  id=\"content\" className=\"materialize-textarea\" onChange={(e) => this.handleChange(e)}/>\r\n                     </div>\r\n                     <div className=\"input-field\">\r\n                         <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\r\n                     </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make the async calls\r\n        const firestore = getFirestore();\r\n        const {firstName, lastName} = getState().firebase.profile\r\n        const {uid} = getState().firebase.auth\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: firstName,\r\n            authorLastName: lastName,\r\n            authorId: uid,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({type: 'CREATE_PROJECT', project})\r\n        }).catch(err => {\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n       \r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n           <Navbar/>\n           <Switch>\n             <Route path='/' component={Dashboard} exact/>\n             <Route path='/project/:id' component={ProjectDetails}/>\n             <Route path='/signin' component={SignIn}/>\n             <Route path='/signup' component={SignUp}/>\n             <Route path='/create' component={CreateProject}/>\n           </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case \"LOGIN_SUCCESS\":\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"LOGIN_ERROR\":\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case \"SIGNOUT_SUCCESS\":\r\n            console.log(\"signout success\")\r\n            return state;\r\n        case \"SIGNOUT_ERROR\":\r\n            console.log(\"signout error\")\r\n            return state;\r\n        case \"SIGNUP_SUCCESS\":\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case \"SIGNUP_ERROR\":\r\n            console.log('signup error')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","const initState = {\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case \"CREATE_PROJECT\":\r\n            console.log('project created', action.project)\r\n            return state;\r\n        case \"CREATE_PROJECT_ERROR\":\r\n            console.log(action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers } from 'redux';\r\nimport {firestoreReducer} from  'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport {Provider, useSelector} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer';\nimport {createFirestoreInstance, getFirestore, reduxFirestore} from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, getFirebase, isLoaded} from 'react-redux-firebase';\nimport firebase from 'firebase/app'\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\n\n// import fbConfig from './config/fbConfig';\n\n\n// import firebase from 'firebase/app';\n\n\nvar config =  {\n    apiKey: \"AIzaSyAiVz6Qjep4zx3O8Qc3yWvmbIxUU0OaddU\",\n    authDomain: \"netninja-mario-plan-5e5d3.firebaseapp.com\",\n    databaseURL: \"https://netninja-mario-plan-5e5d3.firebaseio.com\",\n    projectId: \"netninja-mario-plan-5e5d3\",\n    storageBucket: \"netninja-mario-plan-5e5d3.appspot.com\",\n    messagingSenderId: \"877786261661\",\n    appId: \"1:877786261661:web:559823aa2082da6909cc74\"\n  };\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({});\n\nconst store = createStore(rootReducer, \n    compose(applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(firebase, config)\n    )\n   );\n\nconst rrfConfig =  {\n    userProfile: 'users',\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance, // <- needed if using firestore\n    presence: 'presence', // where list of online users is stored in database\n    sessions: 'sessions'\n}\n\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance\n// };\n\nfunction AuthIsLoaded({children}){\n    const auth = useSelector(state => state.firebase.auth);\n    if(!isLoaded(auth)) return <div>Loading screen</div>\n    return children;\n}\n\nReactDOM.render(<Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n    <AuthIsLoaded>\n        <App />\n    </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}